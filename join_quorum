#!/usr/bin/env python
#####################
#Version 1.1        #
#####################

import ezs3.account
from ezs3.utils import *
import os, sys, traceback
import logging
from ezs3.storage import *
from ezs3.crush import CrushMap
from optparse import OptionParser
from ezs3.ntpconfig import NTPConfig
from ezs3.searcher import ClusterSearcher
from ezs3.cluster import ClusterManager, GW, OSD, Role, QUORUM
from ezs3.defaults import BigTeraDefaultSettings as defaults
from ezs3.log import EZLog
from ezs3.gwgroup import GatewayGroupManager 
from ezs3.config import Ezs3CephConfig, UbuntuNetworkConfig
from ezs3.license import *

def format_partitions(add_svs, fstype):
    for sv in add_svs:
        sv.format(fstype)
def update_progress(progress):
    sys.stdout.write("\r%d%%" % progress)
    sys.stdout.flush()

if __name__ == "__main__":
    replication = '2'
    admin_name = "admin"
    admin_password = "admin"

    usage = "Usage: %prog [options]"
    parser = OptionParser(usage=usage)
    parser.add_option("-p", "--public-nic",
                      dest="public_nic",
                      help="Specify public interface, ex: eth0")
    parser.add_option("-s", "--storage-nic",
                      dest="storage_nic",
                      help="Specify storage interface, ex: eth1")
    parser.add_option("-n", "--name",
                      metavar="NAME", dest="cluster_name",
                      help="Specify name for cluster")
 
    (options, args) = parser.parse_args()
    if not options.storage_nic or not options.cluster_name:
        parser.print_help()
        sys.exit(0)

    EZLog.init_handler(
        logging.DEBUG, "/var/log/ezcloudstor/promise.log"
    )
    logger = EZLog.get_logger("promise")
    update_progress(10)
    conf = Ezs3CephConfig()
    sv_mgr = StorageVolumeManager()

    s = ClusterSearcher()
    clusters = s.search(options.storage_nic, 5)
    for mon in clusters[options.cluster_name]:
        conf.add_mon(mon.id, mon.ip)

    conf.set_cluster_name(options.cluster_name)
    update_progress(20)
    conf.set_storage_interface(options.storage_nic)
    conf.set_cluster_interface(options.storage_nic)
    conf.set_public_interface(options.public_nic)
    conf.save()
    update_progress(30)
    cluster_mgr = ClusterManager()
    # sync time with mon leader before joining cluster
    mon_lead = cluster_mgr.get_mon_leader()
    ntp_config = NTPConfig()
    ntp_config.load()
    ntp_config.update_internal_server(mon_lead.ip)
    ntp_config.save()
    ntp_config.restart_service()
    logger.info("Setup NTP done.")


#   setup_ssh_keys() 

    update_progress(40)
    ip = get_interface_ipv4(options.storage_nic)
    logger.debug("patch ceph init script")
    patch_ceph_init_script(ip)
 
    # do not update locate db for /data
    add_updatedb_conf("PRUNEFS", "ceph")
    update_progress(45)
    logger.debug("patch portmap init config")
    patch_portmap_init_config()
    update_progress(50)
    logger.debug("setup ssh key")
    setup_ssh_keys()
    update_progress(55)

    logger.debug("start mon")
    do_cmd("ezgateway-add-mon")
    update_progress(60)

    logger.debug("start ezs3 service")
    start_ezs3_service()
    update_progress(65)

    do_cmd("sysctl -w kernel.panic=10")
    update_progress(70)

    enabled_roles = Role()
    enabled_roles.add(QUORUM)

    update_progress(80)
    update_progress(90)

    logger.info("Join cluster done.")
    
    update_progress(100)

